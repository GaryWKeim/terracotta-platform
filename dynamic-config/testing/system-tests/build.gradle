/*
 * Copyright (c) 2011-2019 Software AG, Darmstadt, Germany and/or Software AG USA Inc., Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their licensors.
 * Use, reproduction, transfer, publication or disclosure is prohibited except as specifically provided for in your License Agreement with Software AG.
 */

import org.gradle.internal.jvm.Jvm

dependencies {
  compile project(':dynamic-config-config-tool')
  compile project(':dynamic-config-server')
  compile project(':dynamic-config-xml-ee')
  compile project(':dynamic-config-test-support')
  compile project(':diagnostic-client')
  compile project(':port-locking')
  compile project(':test-utilities')

  // TODO [DYNAMIC-CONFIG]: We need to use angela-ee currently because 10.x distribution is considered EE.
  // We can move to angela OSS when we change the distribution to ehcache 3.x
  compile "com.terracottatech:angela-ee:$angelaVersion"
  compile "org.terracotta:ipc-eventbus:$ipcEventbusVersion"
  compile "org.terracotta.management.dist:mnm-nms-agent:$terracottaPlatformVersion"
  compile "org.terracotta.management.dist:mnm-nms:$terracottaPlatformVersion"
  compile "org.terracotta.internal:tc-config-parser:$terracottaConfigVersion"
  compile "org.terracotta:tcconfig-schema:$terracottaConfigVersion"
  compile "org.terracotta.management:monitoring-service-api:$terracottaPlatformVersion"
  compile "org.terracotta:offheap-resource:$terracottaPlatformVersion"
  compile "org.terracotta:lease-entity-server:$terracottaPlatformVersion"

  compile("org.awaitility:awaitility:$awaitility")
  compile "ch.qos.logback:logback-classic:$logbackVersion"
  compile "junit:junit:$junitVersion"
  compile "org.hamcrest:hamcrest-all:$hamcrestVersion"
  compile("com.github.stefanbirkner:system-rules:$systemRulesVersion") {
    exclude group: 'junit'
  }

  testCompile "org.terracotta.internal:connection-loader:$terracottaCoreVersion"
  testCompile "org.terracotta:packaging-support:$terracottaApisVersion"
  testCompile "org.terracotta:connection-api:$terracottaApisVersion"
  testCompile "org.terracotta.internal:common:$terracottaCoreVersion"
  testCompile "org.terracotta:lease-api:$terracottaPlatformVersion"
}

apply plugin: TcDistribute

task copyAndUntar(type: Copy) {
  dependsOn project(':terracotta').distTar

  from(file(project(':terracotta').distTar.archivePath))
  into("build/angela/kits/$project.version")

  from tarTree(project(':terracotta').distTar.archivePath)
  into("build/angela/kits/$project.version")

  into("terracotta-$project.version/server/lib") {
    from "src/test/resources/logback-ext.xml"
  }

  dependsOn project(':dynamic-config-test-support').jar
  into("terracotta-$project.version/server/plugins/lib") {
    from project(':dynamic-config-test-support').jar.archivePath.getPath()
  }
}

test {
  dependsOn copyAndUntar

  // TODO: TDB-4788: Angela tests from the same module can't run concurrently
  // maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1

// Server-side
  def serverJvm = Jvm.current()
  environment 'JAVA_HOME', serverJvm.javaHome
  if (serverJvm.getJavaVersion().compareTo(JavaVersion.VERSION_1_8) > 0) {
    environment 'JAVA_OPTS', '--add-modules java.xml.bind'
  }

  // Angela properties
  systemProperty 'angela.rootDir', file('build/angela').absolutePath
//  systemProperty 'angela.kitInstallationDir', "build/angela/kits/$project.version/terracotta-$project.version"
  systemProperty 'angela.skipUninstall', 'true'
  systemProperty 'angela.tsa.fullLogging', 'true'
  systemProperty 'angela.kit.version', "$project.version"

  testLogging {
    events 'started'
  }
}
